#!/bin/zsh
# shellcheck shell=bash disable=SC2016,SC2154,SC2179,SC2312
# SC2016 (info): Expressions don't expand in single quotes, use double quotes for that.
# SC2154 (warning): <VAR> is referenced but not assigned. [ZSH]
# SC2179 (warning): Use array+=("item") to append items to an array. [ZSH]
# SC2312 (info): Consider invoking this command separately to avoid masking its return value (or use '|| true' to ignore).

# This script complies with Semantic Versioning: http://semver.org/
declare -ri v_major=0
declare -ri v_minor=1
declare -ri v_patch=6
declare -r v_hash='$Hash$'

# usage shows how to use this command.
function usage() {
  local -r my_name="${1:t}"

  ${CAT} <<EOF
NAME

${my_name}

SYNOPSIS

${my_name} [ --status (-s) ]
                 [ --active (-a) ] [ --inactive (-i) ]
                 [ --macro (-m) ] [ --status (s) ]
                 [ --station <Workstation> ]
                 [ --no-pager ]
                 [ --verbose (-v) ]
                 [ --help (-h) ] [ --version (-V) ]

DESCRIPTION

$(${FMT} <<<"${my_name} queries the RECORDINGS table in the Rivendell database and displays the entries indicating the days and times each entry is scheduled.")

$(${FMT} <<<"Specify '--active' (short option: '-a') to have ${my_name} display only active tasks. The default is to display all tasks.")

$(${FMT} <<<"Specify '--inactive' (short option: '-i') to have ${my_name} display only inactive tasks. This is mutually exclusive of the -a option.")

$(${FMT} <<<"Use the option '--macro' (short option: '-m') to have ${my_name} display only Macro tasks.")

$(${FMT} <<<"Specify '--status' (short option: '-s') to have ${my_name} also display the status of the most recent instance of the task.")

$(${FMT} <<<"Specify '--station' (no short option) to have ${my_name} display tasks for the named Rivendell workstation. The default is to display all RDCatch jobs.")

$(${FMT} <<<"Specify '--no-pager' (no short option) to have ${my_name} display tasks without page-at-a-time output. The default is to display output using the app named in the environment variable PAGER, or /usr/bin/less if that variable is not set.")

EOF
}

############# BEGIN external shell commands used in this script. #############
# This script uses these 4 external commands.
# Look for them in their upper case, parameter expanded form.
our_commands=( cat fmt getopt mysql )
# Find the executables we need; this uses some basic shell and a ZSH trick:
# the (U) in the eval says to evaluate the parameter as all upper case
# letters. This snippet generates shell parameters representing the upper case
# equivalent of the command names and sets the parameter values to the full path
# of the commands.
# Refresh this segment in Emacs by marking the appropriate region (or the whole
# buffer with C-xH) and replacing it with C-uM-|mk-ourCommands --script (shell-command-on-region).
typeset C D
# SC2048: shellcheck overly aggressive quote recommendation.
# shellcheck disable=SC2048
for C in ${our_commands[*]} ; do
  # shellcheck disable=SC2154 # ZSH: ${path} is set by the shell.
  for D in ${path} ; do
    # shellcheck disable=SC2140,SC2086,SC2296 # we need the quotes, ZSH-specific expansion
    [[ -x "${D}/${C}" ]] && { eval "${(U)C//-/_}"="${D}/${C}" ; break ; }
  done
  # shellcheck disable=SC2296,SC2312 # ZSH-specific expansion
  [[ -x $(eval print \$"${(U)C//-/_}") ]] || { print "Cannot find ${C}! Done."; return 1 ; }
done
unset our_commands C D
############## END external shell commands used in this script. ##############

typeset -i SHOW_VERSION=0
typeset -i STATUS=0
typeset -i VERBOSE=0
typeset -i ACTIVE=0
typeset -i INACTIVE=0
typeset -i MACRO=0
typeset -i NO_PAGER=0
typeset STATION

if ! TEMP=$(${GETOPT} -o ahimsVv --long active,help,inactive,macro,no-pager,station:,status,version,verbose -n "${0:t}" -- "${@}") ; then
  print "getopt(1) Fatal Error (${?}). Terminating..." >&2
  return 1
fi
eval set -- "${TEMP}"
while : ; do
    # VERBOSE is used, but in a non-Bash way.
    # shellcheck disable=SC2034
    case "${1}" in
	-a|--active) ACTIVE=1 ; INACTIVE=0 ; shift ;;
	-h|--help) usage "${0}" ; exit ;;
	-i|--inactive) ACTIVE=0 ; INACTIVE=1 ; shift ;;
	-m|--macro) MACRO=1 ; shift ;;
	--no-pager) NO_PAGER=1 ; shift ;;
	--station) STATION="${2}" ; shift 2 ;;
	-s|--status) STATUS=1 ; shift ;;
	-V|--version) SHOW_VERSION=1 ; shift ;;
	-v|--verbose) ((VERBOSE += 1)) ; shift ;;
	--) shift ; break ;;
	*) print "${0:t}: getopt internal error!. Terminating..." >&2 ; return 1 ;;
    esac
done
unset TEMP

if ((SHOW_VERSION)) ; then
    typeset commit_hash="${v_hash}"
    [[ "${v_hash}" == '$Hash$' ]] &&
	commit_hash="prerelase"
    # SC2299 (error): Parameter expansions can't be nested. Use temporary variables.
    # shellcheck disable=SC2299
    print "${0:t}: version ${v_major}.${v_minor}.${v_patch}-${${commit_hash#\$Hash: }%$}"
    exit 0
fi

# id,start_time,station_name,r.type,is_active,if(r.type=1,rpad(lpad(macro_cart,6,'0'),10,' '),cut_name),if(r.type=1,macros,url) from RECORDINGS r left join CART c on number = macro_cart

# SC2178 (warning): Variable was used as an array but is now assigned a string. [ZSH]
# shellcheck disable=SC2178
query="select "
query+="r.ID, "
if [[ -z "${STATION}" ]] ; then
    query+="r.STATION_NAME as 'STATION', "
fi
query+="r.TYPE as 'TYPE', "
query+="r.IS_ACTIVE as 'ACTIVE', "
query+="r.START_TIME as 'START TIME', "
query+="concat(if(r.SUN='y','X','-'), '|', "
query+="if(r.MON='y','X','-'), '|', "
query+="if(r.TUE='y','X','-'), '|', "
query+="if(r.WED='y','X','-'), '|', "
query+="if(r.THU='y','X','-'), '|', "
query+="if(r.FRI='y','X','-'), '|', "
query+="if(r.SAT='y','X','-')) "
query+="as 'S|M|T|W|R|F|S', "
if ((STATUS)) ; then
    query+="lpad(coalesce(nullif(r.EXIT_TEXT, ''), 'No news, good news'), 20, ' ') as 'STATUS', "
fi
query+="if(r.TYPE=1, rpad(lpad(r.MACRO_CART, 6, '0'), 10, '.'), r.CUT_NAME) as 'MACRO / CUT', "
query+="concat(substr(r.URL, 1, 41), if(length(r.URL) > 41, '...', '')) as 'MACROS / URL', "
query+="concat(substr(r.DESCRIPTION, 1, 41), if(length(r.DESCRIPTION) > 41, '...', '')) as 'DESCRIPTION' "
query+="from RECORDINGS r "
query+="left join CART c on c.NUMBER = r.MACRO_CART "
if ((INACTIVE)) ; then
    query+="where r.IS_ACTIVE = 'n' "
    if ((MACRO)) ; then
	query+="AND r.TYPE = 1 "
    fi
    if [[ -n "${STATION}" ]] ; then
	query+="and r.STATION_NAME = '${STATION}' "
    fi
fi
if ((ACTIVE)) ; then
    query+="where r.IS_ACTIVE = 'y' "
    if ((MACRO)) ; then
	query+="AND r.TYPE = 1 "
    fi
    if [[ -n "${STATION}" ]] ; then
	query+="and r.STATION_NAME = '${STATION}' "
    fi
fi
if ((MACRO && !(INACTIVE || ACTIVE))) ; then
    query+="where r.TYPE = 1 "
fi
if [[ -n "${STATION}" ]] && ! ((MACRO || INACTIVE || ACTIVE)) ; then
    query+="where r.STATION_NAME = '${STATION}' "
fi
query+="order by r.START_TIME"

# SC2128 (warning): Expanding an array without an index only gives the first element. [ZSH]
# shellcheck disable=SC2128
if ((NO_PAGER)) ; then
    ${MYSQL} --table Rivendell -e "${query}"
else
    ${MYSQL} --table Rivendell -e "${query}" | ${PAGER:-less} -RCiP "Viewing RDCatch jobs?e (End of Output).\. Press <q> to quit, <PgDown> and <PgUP> to scroll, <g> to -Beginning-, <G> to -End-\."
fi

exit
